<?php

/**
 * Implements hook_install().
 *
 * Perform actions to set up the site for this profile.
 */
function ch08_i18n_install() {
  // Add text formats.
  $filtered_html_format = array(
    'format' => 'filtered_html',
    'name' => 'Filtered HTML',
    'weight' => 0,
    'filters' => array(
      // URL filter.
      'filter_url' => array(
        'weight' => 0,
        'status' => 1,
      ),
      // HTML filter.
      'filter_html' => array(
        'weight' => 1,
        'status' => 1,
      ),
      // Line break filter.
      'filter_autop' => array(
        'weight' => 2,
        'status' => 1,
      ),
      // HTML corrector filter.
      'filter_htmlcorrector' => array(
        'weight' => 10,
        'status' => 1,
      ),
    ),
  );
  $filtered_html_format = (object) $filtered_html_format;
  filter_format_save($filtered_html_format);

  $full_html_format = array(
    'format' => 'full_html',
    'name' => 'Full HTML',
    'weight' => 1,
    'filters' => array(
      // URL filter.
      'filter_url' => array(
        'weight' => 0,
        'status' => 1,
      ),
      // Line break filter.
      'filter_autop' => array(
        'weight' => 1,
        'status' => 1,
      ),
      // HTML corrector filter.
      'filter_htmlcorrector' => array(
        'weight' => 10,
        'status' => 1,
      ),
    ),
  );
  $full_html_format = (object) $full_html_format;
  filter_format_save($full_html_format);

  // Enable some standard blocks.
  $default_theme = variable_get('theme_default', 'marinelli');
  $admin_theme = 'seven';
  $values = array(
    array(
      'module' => 'system',
      'delta' => 'main',
      'theme' => $default_theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'content',
      'pages' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'node',
      'delta' => 'recent',
      'theme' => $admin_theme,
      'status' => 1,
      'weight' => 10,
      'region' => 'dashboard_main',
      'pages' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'user',
      'delta' => 'login',
      'theme' => $default_theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'sidebar_first',
      'pages' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'system',
      'delta' => 'navigation',
      'theme' => $default_theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'sidebar_first',
      'pages' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'system',
      'delta' => 'powered-by',
      'theme' => $default_theme,
      'status' => 1,
      'weight' => 10,
      'region' => 'footer',
      'pages' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'system',
      'delta' => 'help',
      'theme' => $default_theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'help',
      'pages' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'system',
      'delta' => 'main',
      'theme' => $admin_theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'content',
      'pages' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'system',
      'delta' => 'help',
      'theme' => $admin_theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'help',
      'pages' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'user',
      'delta' => 'login',
      'theme' => $admin_theme,
      'status' => 1,
      'weight' => 10,
      'region' => 'content',
      'pages' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'user',
      'delta' => 'new',
      'theme' => $admin_theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'dashboard_sidebar',
      'pages' => '',
      'cache' => -1,
    ),
    array(
      'module' => 'search',
      'delta' => 'form',
      'theme' => $admin_theme,
      'status' => 1,
      'weight' => -10,
      'region' => 'dashboard_sidebar',
      'pages' => '',
      'cache' => -1,
    ),
  );
  $query = db_insert('block')->fields(array('module', 'delta', 'theme', 'status', 'weight', 'region', 'pages', 'cache'));
  foreach ($values as $record) {
    $query->values($record);
  }
  $query->execute();

  // Insert default pre-defined node types into the database. For a complete
  // list of available node type attributes, refer to the node type API
  // documentation at: http://api.drupal.org/api/HEAD/function/hook_node_info.
  $types = array(
    array(
      'type' => 'page',
      'name' => st('Basic page'),
      'base' => 'node_content',
      'description' => st("Use <em>basic pages</em> for your static content, such as an 'About us' page."),
      'custom' => 1,
      'modified' => 1,
      'locked' => 0,
    ),
    array(
      'type' => 'article',
      'name' => st('Article'),
      'base' => 'node_content',
      'description' => st('Use <em>articles</em> for time-sensitive content like news, press releases or blog posts.'),
      'custom' => 1,
      'modified' => 1,
      'locked' => 0,
    ),
  );

  foreach ($types as $type) {
    $type = node_type_set_defaults($type);
    node_type_save($type);
    node_add_body_field($type);
  }

  // Insert default pre-defined RDF mapping into the database.
  $rdf_mappings = array(
    array(
      'type' => 'node',
      'bundle' => 'page',
      'mapping' => array(
        'rdftype' => array('foaf:Document'),
      ),
    ),
    array(
      'type' => 'node',
      'bundle' => 'article',
      'mapping' => array(
        'field_image' => array(
          'predicates' => array('og:image', 'rdfs:seeAlso'),
          'type' => 'rel',
        ),
      ),
    ),
  );

  // Default "Basic page" to not be promoted and have comments disabled.
  variable_set('node_options_page', array('status'));
  variable_set('comment_page', COMMENT_NODE_HIDDEN);

  // Don't display date and author information for "Basic page" nodes by default.
  variable_set('node_submitted_page', FALSE);

  // Enable user picture support and set the default to a square thumbnail option.
  variable_set('user_pictures', '1');
  variable_set('user_picture_dimensions', '1024x1024');
  variable_set('user_picture_file_size', '800');
  variable_set('user_picture_style', 'thumbnail');

  // Allow visitor account creation with administrative approval.
  variable_set('user_register', USER_REGISTER_VISITORS_ADMINISTRATIVE_APPROVAL);

  // Create an image field named "Image", enabled for the 'article' content type.
  // Many of the following values will be defaulted, they're included here as an illustrative examples.
  // See http://api.drupal.org/api/function/field_create_field/7

  $field = array(
    'field_name' => 'field_image',
    'type' => 'image',
    'cardinality' => 1,
    'locked' => FALSE,
    'indexes' => array('fid' => array('fid')),
    'settings' => array(
      'uri_scheme' => 'public',
      'default_image' => FALSE,
    ),
    'storage' => array(
      'type' => 'field_sql_storage',
      'settings' => array(),
    ),
  );
  field_create_field($field);


  // Many of the following values will be defaulted, they're included here as an illustrative examples.
  // See http://api.drupal.org/api/function/field_create_instance/7
  $instance = array(
    'field_name' => 'field_image',
    'entity_type' => 'node',
    'label' => 'Image',
    'bundle' => 'article',
    'description' => st('Upload an image to go with this article.'),
    'required' => FALSE,

    'settings' => array(
      'file_directory' => 'field/image',
      'file_extensions' => 'png gif jpg jpeg',
      'max_filesize' => '',
      'max_resolution' => '',
      'min_resolution' => '',
      'alt_field' => TRUE,
      'title_field' => '',
    ),

    'widget' => array(
      'type' => 'image_image',
      'settings' => array(
        'progress_indicator' => 'throbber',
        'preview_image_style' => 'thumbnail',
      ),
      'weight' => -1,
    ),

    'display' => array(
      'default' => array(
        'label' => 'hidden',
        'type' => 'image',
        'settings' => array('image_style' => 'large', 'image_link' => ''),
        'weight' => -1,
      ),
      'teaser' => array(
        'label' => 'hidden',
        'type' => 'image',
        'settings' => array('image_style' => 'medium', 'image_link' => 'content'),
        'weight' => -1,
      ),
    ),
  );
  field_create_instance($instance);

  // Enable default permissions for system roles.
  $filtered_html_permission = filter_permission_name($filtered_html_format);
  user_role_grant_permissions(DRUPAL_ANONYMOUS_RID, array('access content', 'access comments', $filtered_html_permission));
  user_role_grant_permissions(DRUPAL_AUTHENTICATED_RID, array('access content', 'access comments', 'post comments', 'skip comment approval', $filtered_html_permission));

  // Create a default role for site administrators, with all available permissions assigned.
  $admin_role = new stdClass();
  $admin_role->name = 'administrator';
  $admin_role->weight = 2;
  user_role_save($admin_role);
  user_role_grant_permissions($admin_role->rid, array_keys(module_invoke_all('permission')));
  // Set this as the administrator role.
  variable_set('user_admin_role', $admin_role->rid);
  
  /* CUSTOM SETTINGS FOR USING DRUPAL CASE STUDIES */

  // Create an editor role, to assign the editorial permissions to which we refer in the chapter.
  $editor_role = new stdClass();
  $editor_role->name = 'editor';
  $editor_role->weight = 3;
  user_role_save($editor_role);

  // Create an editor user.
  $editor_user = new stdClass();
  $editor_user->name = 'editor';
  $editor_user->pass = 'oreilly';
  $editor_user->mail = 'editor@example.com';
  $editor_user->roles = array(4 => 'editor');
  $editor_user->status = 1;
  user_save($editor_user);
  
  // Create a regular auth user.
  $user_user = new stdClass();
  $user_user->name = 'user';
  $user_user->pass = 'oreilly';
  $user_user->mail = 'user@example.com';
  $user_user->status = 1;
  user_save($user_user);

  // Assign user 1 the "administrator" role.
  db_insert('users_roles')
    ->fields(array('uid' => 1, 'rid' => $admin_role->rid))
    ->execute();

  // Create a Home link in the main menu.
  $item = array(
    'link_title' => st('Home'),
    'link_path' => '<front>',
    'menu_name' => 'main-menu',
  );
  menu_link_save($item);

  // Update the menu router information.
  menu_rebuild();

  // Set the default theme and set some defaults.
  theme_enable(array('marinelli'));
  variable_set('theme_default', 'marinelli');
  // Theme settings.
  $theme_vars = unserialize('a:40:{s:11:"toggle_logo";i:1;s:11:"toggle_name";i:1;s:13:"toggle_slogan";i:1;s:24:"toggle_node_user_picture";i:1;s:27:"toggle_comment_user_picture";i:1;s:32:"toggle_comment_user_verification";i:1;s:14:"toggle_favicon";i:1;s:16:"toggle_main_menu";i:1;s:21:"toggle_secondary_menu";i:1;s:12:"default_logo";i:1;s:9:"logo_path";s:0:"";s:11:"logo_upload";s:0:"";s:15:"default_favicon";i:1;s:12:"favicon_path";s:0:"";s:14:"favicon_upload";s:0:"";s:16:"breadcrumb_title";s:1:"1";s:23:"breadcrumb_title_length";s:2:"50";s:12:"layout_width";s:1:"1";s:11:"layout_type";s:1:"1";s:6:"blocks";s:1:"2";s:9:"menu_type";s:1:"1";s:12:"menu_element";s:9:"main-menu";s:14:"menu_alt_class";a:1:{i:0;s:1:"0";}s:12:"outside_tags";s:1:"0";s:10:"title_tags";s:1:"0";s:13:"menu_headings";s:1:"1";s:11:"sticky_text";s:6:"Sticky";s:7:"bartext";s:10:"Slide Down";s:8:"bartext2";s:8:"Slide Up";s:3:"css";s:1:"1";s:8:"css_typo";s:1:"1";s:12:"banner_usage";s:1:"1";s:13:"banner_effect";s:4:"fade";s:12:"banner_speed";s:4:"1000";s:12:"banner_delay";s:4:"4000";s:12:"banner_pause";s:1:"1";s:15:"banner_showtext";s:1:"0";s:21:"banner_shownavigation";s:1:"1";s:6:"images";a:7:{i:0;a:1:{s:5:"image";a:9:{s:10:"image_path";s:21:"public://banner/2.jpg";s:11:"image_thumb";s:27:"public://banner/thumb/2.jpg";s:11:"image_title";s:17:"Title for image 2";s:17:"image_description";s:23:"Description for image 2";s:9:"image_url";s:7:"<front>";s:16:"image_visibility";s:1:"*";s:12:"image_weight";s:1:"0";s:15:"image_published";i:1;s:12:"image_delete";i:0;}}i:1;a:1:{s:5:"image";a:9:{s:10:"image_path";s:21:"public://banner/1.jpg";s:11:"image_thumb";s:27:"public://banner/thumb/1.jpg";s:11:"image_title";s:17:"Title for image 1";s:17:"image_description";s:23:"Description for image 1";s:9:"image_url";s:7:"<front>";s:16:"image_visibility";s:1:"*";s:12:"image_weight";s:1:"0";s:15:"image_published";i:0;s:12:"image_delete";i:0;}}i:2;a:1:{s:5:"image";a:9:{s:10:"image_path";s:21:"public://banner/3.jpg";s:11:"image_thumb";s:27:"public://banner/thumb/3.jpg";s:11:"image_title";s:17:"Title for image 3";s:17:"image_description";s:23:"Description for image 3";s:9:"image_url";s:7:"<front>";s:16:"image_visibility";s:1:"*";s:12:"image_weight";s:1:"0";s:15:"image_published";i:1;s:12:"image_delete";i:0;}}i:3;a:1:{s:5:"image";a:9:{s:10:"image_path";s:21:"public://banner/4.jpg";s:11:"image_thumb";s:27:"public://banner/thumb/4.jpg";s:11:"image_title";s:17:"Title for image 4";s:17:"image_description";s:23:"Description for image 4";s:9:"image_url";s:7:"<front>";s:16:"image_visibility";s:1:"*";s:12:"image_weight";s:1:"0";s:15:"image_published";i:1;s:12:"image_delete";i:0;}}i:4;a:1:{s:5:"image";a:9:{s:10:"image_path";s:21:"public://banner/6.jpg";s:11:"image_thumb";s:27:"public://banner/thumb/6.jpg";s:11:"image_title";s:17:"Title for image 6";s:17:"image_description";s:23:"Description for image 6";s:9:"image_url";s:7:"<front>";s:16:"image_visibility";s:1:"*";s:12:"image_weight";s:1:"0";s:15:"image_published";i:1;s:12:"image_delete";i:0;}}i:5;a:1:{s:5:"image";a:9:{s:10:"image_path";s:21:"public://banner/5.jpg";s:11:"image_thumb";s:27:"public://banner/thumb/5.jpg";s:11:"image_title";s:17:"Title for image 5";s:17:"image_description";s:23:"Description for image 5";s:9:"image_url";s:7:"<front>";s:16:"image_visibility";s:1:"*";s:12:"image_weight";s:1:"0";s:15:"image_published";i:1;s:12:"image_delete";i:0;}}s:18:"images__active_tab";s:13:"edit-images-1";}s:12:"image_upload";s:0:"";}');
  variable_set('theme_marinelli_settings', $theme_vars);
  
  // Enable the admin theme.
  db_update('system')
    ->fields(array('status' => 1))
    ->condition('type', 'theme')
    ->condition('name', 'seven')
    ->execute();
  variable_set('admin_theme', 'seven');
  variable_set('node_admin_theme', '1');
  
  // Create a default page node.
  $node = new stdClass();
  $node->title = 'Welcome to Blue Peak Fanatics!';
  $node->type = 'article';
  $node->promote = 1;
  $node->sticky = 1;
  $node->uid = 1;
  $node->body['und'][0]['value'] = "Blue Peak Fanatics is a place to meet your fellow mountaineering fanatics. Join us and share your knowledge, learn from others, and generally have a good time while you're not on the peaks.";
  node_save($node);
  
  // Enable Forum module and create some forums.
  module_enable('forum');
  // Add the forums Equipment and Travel advice.
  
}
